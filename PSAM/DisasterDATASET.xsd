<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DisasterDATASET" targetNamespace="http://tempuri.org/DisasterDATASET.xsd" xmlns:mstns="http://tempuri.org/DisasterDATASET.xsd" xmlns="http://tempuri.org/DisasterDATASET.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="psamConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="psamConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PSAM.Properties.Settings.GlobalReference.Default.psamConnectionString1" Provider="MySql.Data.MySqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="totalFamiliesAffectedTableAdapter" GeneratorDataComponentClassName="totalFamiliesAffectedTableAdapter" Name="totalFamiliesAffected" UserDataComponentName="totalFamiliesAffectedTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectName="psam.affectedareas" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        COUNT(affectedareas.houseHoldID) AS familiesAffected, affectedareas.disasterID
FROM            household INNER JOIN
                         affectedareas ON household.houseHoldID = affectedareas.houseHoldID
WHERE        (affectedareas.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="familiesAffected" DataSetColumn="familiesAffected" />
              <Mapping SourceColumn="disasterID" DataSetColumn="disasterID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countOwnedTableAdapter" GeneratorDataComponentClassName="countOwnedTableAdapter" Name="countOwned" UserDataComponentName="countOwnedTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        COUNT(affectedareas.houseHoldID) AS familyAffected
FROM            affectedareas INNER JOIN
                         household ON affectedareas.houseHoldID = household.houseHoldID
WHERE        (household.houseOccupancy = 'Owned') AND (affectedareas.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="familyAffected" DataSetColumn="familyAffected" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countRentingTableAdapter" GeneratorDataComponentClassName="countRentingTableAdapter" Name="countRenting" UserDataComponentName="countRentingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        COUNT(affectedareas.houseHoldID) AS familyAffected
FROM            affectedareas INNER JOIN
                         household ON affectedareas.houseHoldID = household.houseHoldID
WHERE        (household.houseOccupancy = 'Renting') AND (affectedareas.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="familyAffected" DataSetColumn="familyAffected" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countLivingWithTableAdapter" GeneratorDataComponentClassName="countLivingWithTableAdapter" Name="countLivingWith" UserDataComponentName="countLivingWithTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        COUNT(affectedareas.houseHoldID) AS familyAffected
FROM            affectedareas INNER JOIN
                         household ON affectedareas.houseHoldID = household.houseHoldID
WHERE        (household.houseOccupancy = 'Living with Parents/Relatives') AND (affectedareas.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="familyAffected" DataSetColumn="familyAffected" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countUsedFreeTableAdapter" GeneratorDataComponentClassName="countUsedFreeTableAdapter" Name="countUsedFree" UserDataComponentName="countUsedFreeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        COUNT(affectedareas.houseHoldID) AS familyAffected
FROM            affectedareas INNER JOIN
                         household ON affectedareas.houseHoldID = household.houseHoldID
WHERE        (household.houseOccupancy = 'Used Free') AND (affectedareas.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="familyAffected" DataSetColumn="familyAffected" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="totalHousesDamagedTableAdapter" GeneratorDataComponentClassName="totalHousesDamagedTableAdapter" Name="totalHousesDamaged" UserDataComponentName="totalHousesDamagedTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        COUNT(household.houseHoldID) AS TOTAL
FROM            damages INNER JOIN
                         household ON damages.houseHoldID = household.houseHoldID
WHERE        (damages.damagedItem = 'House') AND (damages.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TOTAL" DataSetColumn="TOTAL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countTotallyDamagedTableAdapter" GeneratorDataComponentClassName="countTotallyDamagedTableAdapter" Name="countTotallyDamaged" UserDataComponentName="countTotallyDamagedTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        COUNT(household.houseHoldID) AS TOTAL
FROM            damages INNER JOIN
                         household ON damages.houseHoldID = household.houseHoldID
WHERE        (damages.damagedItem = 'House') AND (damages.extendOfDamage = 'Totally Damaged') AND (damages.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TOTAL" DataSetColumn="TOTAL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countPartiallyDamagedTableAdapter" GeneratorDataComponentClassName="countPartiallyDamagedTableAdapter" Name="countPartiallyDamaged" UserDataComponentName="countPartiallyDamagedTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        COUNT(household.houseHoldID) AS TOTAL
FROM            damages INNER JOIN
                         household ON damages.houseHoldID = household.houseHoldID
WHERE        (damages.damagedItem = 'House') AND (damages.extendOfDamage = 'Partially Damaged') AND (damages.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TOTAL" DataSetColumn="TOTAL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="totalCasualtiesTableAdapter" GeneratorDataComponentClassName="totalCasualtiesTableAdapter" Name="totalCasualties" UserDataComponentName="totalCasualtiesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        COUNT(respondent.respondentID) AS TOTAL
FROM            respondent INNER JOIN
                         casualty ON respondent.respondentID = casualty.respondentID
WHERE        (casualty.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TOTAL" DataSetColumn="TOTAL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countDeadTableAdapter" GeneratorDataComponentClassName="countDeadTableAdapter" Name="countDead" UserDataComponentName="countDeadTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(respondent.respondentID) AS TOTAL
FROM            respondent INNER JOIN
                         casualty ON respondent.respondentID = casualty.respondentID
WHERE        (casualty.casualtyType = 'Dead') AND (casualty.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="psam.casualty" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TOTAL" DataSetColumn="TOTAL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countMissingTableAdapter" GeneratorDataComponentClassName="countMissingTableAdapter" Name="countMissing" UserDataComponentName="countMissingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(respondent.respondentID) AS TOTAL
FROM            respondent INNER JOIN
                         casualty ON respondent.respondentID = casualty.respondentID
WHERE        (casualty.casualtyType = 'Missing') AND (casualty.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="psam.casualty" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TOTAL" DataSetColumn="TOTAL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countInjuredTableAdapter" GeneratorDataComponentClassName="countInjuredTableAdapter" Name="countInjured" UserDataComponentName="countInjuredTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(respondent.respondentID) AS TOTAL
FROM            respondent INNER JOIN
                         casualty ON respondent.respondentID = casualty.respondentID
WHERE        (casualty.casualtyType = 'Injured') AND (casualty.disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="psam.casualty" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TOTAL" DataSetColumn="TOTAL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="totalEstimatedCostTableAdapter" GeneratorDataComponentClassName="totalEstimatedCostTableAdapter" Name="totalEstimatedCost" UserDataComponentName="totalEstimatedCostTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COALESCE(SUM(estimatedCost), 0) AS EstimatedCost
FROM            damages
WHERE        (disasterID = @disasterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="psam.damages" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EstimatedCost" DataSetColumn="EstimatedCost" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MASTERLISTTableAdapter" GeneratorDataComponentClassName="MASTERLISTTableAdapter" Name="MASTERLIST" UserDataComponentName="MASTERLISTTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectName="psam.casualty" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        CONCAT(respondent.lastName, ', ', respondent.firstName) AS NAME, casualty.casualtyType AS REMARKS, CONCAT(disaster.disasterType, ' - ', disaster.disasterDate) AS DISASTER
FROM            household INNER JOIN
                         affectedareas ON household.houseHoldID = affectedareas.houseHoldID, casualty INNER JOIN
                         respondent ON casualty.respondentID = respondent.respondentID INNER JOIN
                         disaster ON casualty.disasterID = disaster.disasterID
WHERE        (disaster.disasterID = @disasterID)
GROUP BY respondent.respondentID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="psam.disaster" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NAME" DataSetColumn="NAME" />
              <Mapping SourceColumn="REMARKS" DataSetColumn="REMARKS" />
              <Mapping SourceColumn="DISASTER" DataSetColumn="DISASTER" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="psamConnectionString1 (Settings)" DbObjectName="psam.casualty" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FilterBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FilterBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FilterBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        CONCAT(respondent.lastName, ', ', respondent.firstName) AS NAME, casualty.casualtyType AS REMARKS, CONCAT(disaster.disasterType, ' - ', disaster.disasterDate) AS DISASTER
FROM            household INNER JOIN
                         affectedareas ON household.houseHoldID = affectedareas.houseHoldID, casualty INNER JOIN
                         respondent ON casualty.respondentID = respondent.respondentID INNER JOIN
                         disaster ON casualty.disasterID = disaster.disasterID
WHERE        (disaster.disasterID = @disasterID) AND (casualty.casualtyType = @type)
GROUP BY respondent.respondentID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="disasterID" ColumnName="disasterID" DataSourceName="psam.disaster" DataTypeServer="int(11)" DbType="Int32" Direction="Input" ParameterName="@disasterID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="disasterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="type" ColumnName="casualtyType" DataSourceName="psam.casualty" DataTypeServer="varchar(30)(30)" DbType="String" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="30" SourceColumn="REMARKS" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DisasterDATASET" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DisasterDATASET" msprop:Generator_UserDSName="DisasterDATASET">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="totalFamiliesAffected" msprop:Generator_TableClassName="totalFamiliesAffectedDataTable" msprop:Generator_TableVarName="tabletotalFamiliesAffected" msprop:Generator_RowChangedName="totalFamiliesAffectedRowChanged" msprop:Generator_TablePropName="totalFamiliesAffected" msprop:Generator_RowDeletingName="totalFamiliesAffectedRowDeleting" msprop:Generator_RowChangingName="totalFamiliesAffectedRowChanging" msprop:Generator_RowEvHandlerName="totalFamiliesAffectedRowChangeEventHandler" msprop:Generator_RowDeletedName="totalFamiliesAffectedRowDeleted" msprop:Generator_RowClassName="totalFamiliesAffectedRow" msprop:Generator_UserTableName="totalFamiliesAffected" msprop:Generator_RowEvArgName="totalFamiliesAffectedRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="familiesAffected" msprop:Generator_ColumnVarNameInTable="columnfamiliesAffected" msprop:Generator_ColumnPropNameInRow="familiesAffected" msprop:Generator_ColumnPropNameInTable="familiesAffectedColumn" msprop:Generator_UserColumnName="familiesAffected" type="xs:long" />
              <xs:element name="disasterID" msprop:Generator_ColumnVarNameInTable="columndisasterID" msprop:Generator_ColumnPropNameInRow="disasterID" msprop:Generator_ColumnPropNameInTable="disasterIDColumn" msprop:Generator_UserColumnName="disasterID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="countOwned" msprop:Generator_TableClassName="countOwnedDataTable" msprop:Generator_TableVarName="tablecountOwned" msprop:Generator_RowChangedName="countOwnedRowChanged" msprop:Generator_TablePropName="countOwned" msprop:Generator_RowDeletingName="countOwnedRowDeleting" msprop:Generator_RowChangingName="countOwnedRowChanging" msprop:Generator_RowEvHandlerName="countOwnedRowChangeEventHandler" msprop:Generator_RowDeletedName="countOwnedRowDeleted" msprop:Generator_RowClassName="countOwnedRow" msprop:Generator_UserTableName="countOwned" msprop:Generator_RowEvArgName="countOwnedRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="familyAffected" msprop:Generator_ColumnVarNameInTable="columnfamilyAffected" msprop:Generator_ColumnPropNameInRow="familyAffected" msprop:Generator_ColumnPropNameInTable="familyAffectedColumn" msprop:Generator_UserColumnName="familyAffected" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="countRenting" msprop:Generator_TableClassName="countRentingDataTable" msprop:Generator_TableVarName="tablecountRenting" msprop:Generator_RowChangedName="countRentingRowChanged" msprop:Generator_TablePropName="countRenting" msprop:Generator_RowDeletingName="countRentingRowDeleting" msprop:Generator_RowChangingName="countRentingRowChanging" msprop:Generator_RowEvHandlerName="countRentingRowChangeEventHandler" msprop:Generator_RowDeletedName="countRentingRowDeleted" msprop:Generator_RowClassName="countRentingRow" msprop:Generator_UserTableName="countRenting" msprop:Generator_RowEvArgName="countRentingRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="familyAffected" msprop:Generator_ColumnVarNameInTable="columnfamilyAffected" msprop:Generator_ColumnPropNameInRow="familyAffected" msprop:Generator_ColumnPropNameInTable="familyAffectedColumn" msprop:Generator_UserColumnName="familyAffected" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="countLivingWith" msprop:Generator_TableClassName="countLivingWithDataTable" msprop:Generator_TableVarName="tablecountLivingWith" msprop:Generator_RowChangedName="countLivingWithRowChanged" msprop:Generator_TablePropName="countLivingWith" msprop:Generator_RowDeletingName="countLivingWithRowDeleting" msprop:Generator_RowChangingName="countLivingWithRowChanging" msprop:Generator_RowEvHandlerName="countLivingWithRowChangeEventHandler" msprop:Generator_RowDeletedName="countLivingWithRowDeleted" msprop:Generator_RowClassName="countLivingWithRow" msprop:Generator_UserTableName="countLivingWith" msprop:Generator_RowEvArgName="countLivingWithRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="familyAffected" msprop:Generator_ColumnVarNameInTable="columnfamilyAffected" msprop:Generator_ColumnPropNameInRow="familyAffected" msprop:Generator_ColumnPropNameInTable="familyAffectedColumn" msprop:Generator_UserColumnName="familyAffected" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="countUsedFree" msprop:Generator_TableClassName="countUsedFreeDataTable" msprop:Generator_TableVarName="tablecountUsedFree" msprop:Generator_RowChangedName="countUsedFreeRowChanged" msprop:Generator_TablePropName="countUsedFree" msprop:Generator_RowDeletingName="countUsedFreeRowDeleting" msprop:Generator_RowChangingName="countUsedFreeRowChanging" msprop:Generator_RowEvHandlerName="countUsedFreeRowChangeEventHandler" msprop:Generator_RowDeletedName="countUsedFreeRowDeleted" msprop:Generator_RowClassName="countUsedFreeRow" msprop:Generator_UserTableName="countUsedFree" msprop:Generator_RowEvArgName="countUsedFreeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="familyAffected" msprop:Generator_ColumnVarNameInTable="columnfamilyAffected" msprop:Generator_ColumnPropNameInRow="familyAffected" msprop:Generator_ColumnPropNameInTable="familyAffectedColumn" msprop:Generator_UserColumnName="familyAffected" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="totalHousesDamaged" msprop:Generator_TableClassName="totalHousesDamagedDataTable" msprop:Generator_TableVarName="tabletotalHousesDamaged" msprop:Generator_RowChangedName="totalHousesDamagedRowChanged" msprop:Generator_TablePropName="totalHousesDamaged" msprop:Generator_RowDeletingName="totalHousesDamagedRowDeleting" msprop:Generator_RowChangingName="totalHousesDamagedRowChanging" msprop:Generator_RowEvHandlerName="totalHousesDamagedRowChangeEventHandler" msprop:Generator_RowDeletedName="totalHousesDamagedRowDeleted" msprop:Generator_RowClassName="totalHousesDamagedRow" msprop:Generator_UserTableName="totalHousesDamaged" msprop:Generator_RowEvArgName="totalHousesDamagedRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TOTAL" msprop:Generator_ColumnVarNameInTable="columnTOTAL" msprop:Generator_ColumnPropNameInRow="TOTAL" msprop:Generator_ColumnPropNameInTable="TOTALColumn" msprop:Generator_UserColumnName="TOTAL" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="countTotallyDamaged" msprop:Generator_TableClassName="countTotallyDamagedDataTable" msprop:Generator_TableVarName="tablecountTotallyDamaged" msprop:Generator_RowChangedName="countTotallyDamagedRowChanged" msprop:Generator_TablePropName="countTotallyDamaged" msprop:Generator_RowDeletingName="countTotallyDamagedRowDeleting" msprop:Generator_RowChangingName="countTotallyDamagedRowChanging" msprop:Generator_RowEvHandlerName="countTotallyDamagedRowChangeEventHandler" msprop:Generator_RowDeletedName="countTotallyDamagedRowDeleted" msprop:Generator_RowClassName="countTotallyDamagedRow" msprop:Generator_UserTableName="countTotallyDamaged" msprop:Generator_RowEvArgName="countTotallyDamagedRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TOTAL" msprop:Generator_ColumnVarNameInTable="columnTOTAL" msprop:Generator_ColumnPropNameInRow="TOTAL" msprop:Generator_ColumnPropNameInTable="TOTALColumn" msprop:Generator_UserColumnName="TOTAL" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="countPartiallyDamaged" msprop:Generator_TableClassName="countPartiallyDamagedDataTable" msprop:Generator_TableVarName="tablecountPartiallyDamaged" msprop:Generator_RowChangedName="countPartiallyDamagedRowChanged" msprop:Generator_TablePropName="countPartiallyDamaged" msprop:Generator_RowDeletingName="countPartiallyDamagedRowDeleting" msprop:Generator_RowChangingName="countPartiallyDamagedRowChanging" msprop:Generator_RowEvHandlerName="countPartiallyDamagedRowChangeEventHandler" msprop:Generator_RowDeletedName="countPartiallyDamagedRowDeleted" msprop:Generator_RowClassName="countPartiallyDamagedRow" msprop:Generator_UserTableName="countPartiallyDamaged" msprop:Generator_RowEvArgName="countPartiallyDamagedRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TOTAL" msprop:Generator_ColumnVarNameInTable="columnTOTAL" msprop:Generator_ColumnPropNameInRow="TOTAL" msprop:Generator_ColumnPropNameInTable="TOTALColumn" msprop:Generator_UserColumnName="TOTAL" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="totalCasualties" msprop:Generator_TableClassName="totalCasualtiesDataTable" msprop:Generator_TableVarName="tabletotalCasualties" msprop:Generator_RowChangedName="totalCasualtiesRowChanged" msprop:Generator_TablePropName="totalCasualties" msprop:Generator_RowDeletingName="totalCasualtiesRowDeleting" msprop:Generator_RowChangingName="totalCasualtiesRowChanging" msprop:Generator_RowEvHandlerName="totalCasualtiesRowChangeEventHandler" msprop:Generator_RowDeletedName="totalCasualtiesRowDeleted" msprop:Generator_RowClassName="totalCasualtiesRow" msprop:Generator_UserTableName="totalCasualties" msprop:Generator_RowEvArgName="totalCasualtiesRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TOTAL" msprop:Generator_ColumnVarNameInTable="columnTOTAL" msprop:Generator_ColumnPropNameInRow="TOTAL" msprop:Generator_ColumnPropNameInTable="TOTALColumn" msprop:Generator_UserColumnName="TOTAL" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="countDead" msprop:Generator_TableClassName="countDeadDataTable" msprop:Generator_TableVarName="tablecountDead" msprop:Generator_RowChangedName="countDeadRowChanged" msprop:Generator_TablePropName="countDead" msprop:Generator_RowDeletingName="countDeadRowDeleting" msprop:Generator_RowChangingName="countDeadRowChanging" msprop:Generator_RowEvHandlerName="countDeadRowChangeEventHandler" msprop:Generator_RowDeletedName="countDeadRowDeleted" msprop:Generator_RowClassName="countDeadRow" msprop:Generator_UserTableName="countDead" msprop:Generator_RowEvArgName="countDeadRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TOTAL" msprop:Generator_ColumnVarNameInTable="columnTOTAL" msprop:Generator_ColumnPropNameInRow="TOTAL" msprop:Generator_ColumnPropNameInTable="TOTALColumn" msprop:Generator_UserColumnName="TOTAL" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="countMissing" msprop:Generator_TableClassName="countMissingDataTable" msprop:Generator_TableVarName="tablecountMissing" msprop:Generator_TablePropName="countMissing" msprop:Generator_RowDeletingName="countMissingRowDeleting" msprop:Generator_RowChangingName="countMissingRowChanging" msprop:Generator_RowEvHandlerName="countMissingRowChangeEventHandler" msprop:Generator_RowDeletedName="countMissingRowDeleted" msprop:Generator_UserTableName="countMissing" msprop:Generator_RowChangedName="countMissingRowChanged" msprop:Generator_RowEvArgName="countMissingRowChangeEvent" msprop:Generator_RowClassName="countMissingRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TOTAL" msprop:Generator_ColumnVarNameInTable="columnTOTAL" msprop:Generator_ColumnPropNameInRow="TOTAL" msprop:Generator_ColumnPropNameInTable="TOTALColumn" msprop:Generator_UserColumnName="TOTAL" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="countInjured" msprop:Generator_TableClassName="countInjuredDataTable" msprop:Generator_TableVarName="tablecountInjured" msprop:Generator_TablePropName="countInjured" msprop:Generator_RowDeletingName="countInjuredRowDeleting" msprop:Generator_RowChangingName="countInjuredRowChanging" msprop:Generator_RowEvHandlerName="countInjuredRowChangeEventHandler" msprop:Generator_RowDeletedName="countInjuredRowDeleted" msprop:Generator_UserTableName="countInjured" msprop:Generator_RowChangedName="countInjuredRowChanged" msprop:Generator_RowEvArgName="countInjuredRowChangeEvent" msprop:Generator_RowClassName="countInjuredRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TOTAL" msprop:Generator_ColumnVarNameInTable="columnTOTAL" msprop:Generator_ColumnPropNameInRow="TOTAL" msprop:Generator_ColumnPropNameInTable="TOTALColumn" msprop:Generator_UserColumnName="TOTAL" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="totalEstimatedCost" msprop:Generator_TableClassName="totalEstimatedCostDataTable" msprop:Generator_TableVarName="tabletotalEstimatedCost" msprop:Generator_RowChangedName="totalEstimatedCostRowChanged" msprop:Generator_TablePropName="totalEstimatedCost" msprop:Generator_RowDeletingName="totalEstimatedCostRowDeleting" msprop:Generator_RowChangingName="totalEstimatedCostRowChanging" msprop:Generator_RowEvHandlerName="totalEstimatedCostRowChangeEventHandler" msprop:Generator_RowDeletedName="totalEstimatedCostRowDeleted" msprop:Generator_RowClassName="totalEstimatedCostRow" msprop:Generator_UserTableName="totalEstimatedCost" msprop:Generator_RowEvArgName="totalEstimatedCostRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EstimatedCost" msprop:Generator_ColumnVarNameInTable="columnEstimatedCost" msprop:Generator_ColumnPropNameInRow="EstimatedCost" msprop:Generator_ColumnPropNameInTable="EstimatedCostColumn" msprop:Generator_UserColumnName="EstimatedCost" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MASTERLIST" msprop:Generator_TableClassName="MASTERLISTDataTable" msprop:Generator_TableVarName="tableMASTERLIST" msprop:Generator_TablePropName="MASTERLIST" msprop:Generator_RowDeletingName="MASTERLISTRowDeleting" msprop:Generator_RowChangingName="MASTERLISTRowChanging" msprop:Generator_RowEvHandlerName="MASTERLISTRowChangeEventHandler" msprop:Generator_RowDeletedName="MASTERLISTRowDeleted" msprop:Generator_UserTableName="MASTERLIST" msprop:Generator_RowChangedName="MASTERLISTRowChanged" msprop:Generator_RowEvArgName="MASTERLISTRowChangeEvent" msprop:Generator_RowClassName="MASTERLISTRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NAME" msprop:Generator_ColumnVarNameInTable="columnNAME" msprop:Generator_ColumnPropNameInRow="NAME" msprop:Generator_ColumnPropNameInTable="NAMEColumn" msprop:Generator_UserColumnName="NAME" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="52" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="REMARKS" msprop:Generator_ColumnVarNameInTable="columnREMARKS" msprop:Generator_ColumnPropNameInRow="REMARKS" msprop:Generator_ColumnPropNameInTable="REMARKSColumn" msprop:Generator_UserColumnName="REMARKS" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DISASTER" msprop:Generator_ColumnVarNameInTable="columnDISASTER" msprop:Generator_ColumnPropNameInRow="DISASTER" msprop:Generator_ColumnPropNameInTable="DISASTERColumn" msprop:Generator_UserColumnName="DISASTER" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>